--Stored Procedures
--a basic setup
-- Specify the name of the SP, define parameters for the SP. specify plpgsql as the procedural language.
-- A stored procedure can accept zero or more parameters which can have the in and inout modes but not the out mode.
----- create [or replace] procedure procedure_name(parameter_list) language plpgsql
-- Next, use the dollar-quoted string constant syntax to define the body of the stored procedure.
----- as $$
-----declare
---------variable declaration
-----begin
--------- stored procedure body
-----end; $$
--A stored procedure does not return a value.BUT,you can use the return statementw/o the expression to stop the SP.
--To return a value from an SP, you use parameters with INOUT.

/*Sample table for the following SP example.
drop table if exists accounts;

create table accounts (
	id int generated by default as identity, 
	name varchar(100) not null,
    balance dec(15,2) not null,
    primary key(id)
);

insert into accounts(name,balance)  values('Bob',10000);
insert into accounts(name,balance)  values('Alice',10000);
*/
/* Example SP (it transfers a specified amount of money from one account to another.)

create or replace procedure transfer( sender int, receiver int,  amount dec ) language plpgsql    
	as 
$$
begin
    -- subtracting the amount from the sender's account 
    update accounts 
    set balance = balance - amount 
    where id = sender;
    -- adding the amount to the receiver's account
    update accounts 
    set balance = balance + amount 
    where id = receiver;

commit;
end;
$$

--calling the SP:   call stored_procedure_name(argument_list);
*/









